{"version":3,"sources":["componets/Search.module.css","componets/CurrentWeather.module.css","assets/icons/svg/001-sunny.svg","assets/icons/svg/013-new moon.svg","assets/icons/svg/016-cloudy.svg","assets/icons/svg/007-thunder.svg","assets/icons/svg/sunnyCloundy.svg","assets/icons/svg/cloud.svg","assets/icons/svg/005-heavy rain.svg","assets/icons/svg/003-rain.svg","assets/icons/svg/017-rainNight.svg","assets/icons/svg/009-snow.svg","componets/IconChanger.js","componets/CurrentWeather.js","store/api-slice.js","hooks/useApiFetch.js","componets/Search.js","App.js","store/index.js","index.js"],"names":["module","exports","IconChanger","currentIcon","useSelector","state","api","icon","alt","sun","moon","nightCloud","dayCloud","cloud","rain","rainDay","rainNight","thunder","snow","src","CurrentWeather","apiData","useState","isFahrenheit","setIsFahrenheit","onUnitChangeHandler","event","target","id","className","classes","wrapper","city","today","Date","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","toLocaleDateString","weekday","getDayName","weatherStatus","temp","temperature","imperialTemp","metricTemp","Math","round","imperialToMetric","btn","onClick","apiSlice","createSlice","name","initialState","weatherMain","currentTime","sunriseTime","sunsetTime","hasError","reducers","updateWeatherInfo","action","payload","apiActions","actions","useApiFetch","dispatch","useDispatch","dataFetch","useCallback","url","a","fetch","response","ok","json","data","main","weather","description","dt","sys","sunset","sunrise","requestData","Search","KEY","process","setCity","onLoadFetch","useEffect","geoLoactionHandler","window","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","fallback","console","log","onSubmit","preventDefault","placeholder","onChange","value","type","App","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.11c629af.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Search_wrapper__1CCXA\",\"logo\":\"Search_logo__1_I_2\",\"city\":\"Search_city__3EqfG\",\"btn\":\"Search_btn__1N4Lf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CurrentWeather_wrapper__1EASy\",\"day-wrapper\":\"CurrentWeather_day-wrapper__2vZCz\",\"icon\":\"CurrentWeather_icon__3-yFg\",\"weather-input\":\"CurrentWeather_weather-input__1QQtQ\",\"btn\":\"CurrentWeather_btn__Q__ty\",\"weather-info\":\"CurrentWeather_weather-info__3t6v-\"};","export default __webpack_public_path__ + \"static/media/001-sunny.59814c3c.svg\";","export default __webpack_public_path__ + \"static/media/013-new moon.1a6f6d0e.svg\";","export default __webpack_public_path__ + \"static/media/016-cloudy.5fc5dbad.svg\";","export default __webpack_public_path__ + \"static/media/007-thunder.62d76fdb.svg\";","export default __webpack_public_path__ + \"static/media/sunnyCloundy.b7e18a25.svg\";","export default __webpack_public_path__ + \"static/media/cloud.c2ade0b8.svg\";","export default __webpack_public_path__ + \"static/media/005-heavy rain.59b18106.svg\";","export default __webpack_public_path__ + \"static/media/003-rain.06ebf3b6.svg\";","export default __webpack_public_path__ + \"static/media/017-rainNight.6a1b11fc.svg\";","export default __webpack_public_path__ + \"static/media/009-snow.2650c662.svg\";","import sun from '../assets/icons/svg/001-sunny.svg';\r\nimport moon from '../assets/icons/svg/013-new moon.svg';\r\nimport nightCloud from  '../assets/icons/svg/016-cloudy.svg';\r\nimport thunder from '../assets/icons/svg/007-thunder.svg';\r\nimport dayCloud from '../assets/icons/svg/sunnyCloundy.svg';\r\nimport cloud from '../assets/icons/svg/cloud.svg';\r\nimport rain from '../assets/icons/svg/005-heavy rain.svg';\r\nimport rainDay from '../assets/icons/svg/003-rain.svg';\r\nimport rainNight from '../assets/icons/svg/017-rainNight.svg';\r\nimport snow from '../assets/icons/svg/009-snow.svg';\r\nimport {useSelector} from \"react-redux\";\r\n\r\n\r\n\r\nconst IconChanger = () => {\r\n    const currentIcon = useSelector(state => state.api.icon);\r\n\r\n    let icon = '';\r\n    let alt = ''\r\n\r\n    if (currentIcon === '01d'){\r\n        icon= sun;\r\n        alt = 'image of the sun';\r\n    }\r\n    if (currentIcon === '01n'){\r\n        icon = moon;\r\n        alt = 'image of the moon';\r\n    }\r\n    if (currentIcon === '02n'){\r\n        icon = nightCloud;\r\n        alt = 'image of cloud and moon';\r\n    }\r\n    if (currentIcon === '02d'){\r\n        icon = dayCloud;\r\n        alt = 'image of a cloud and sun';\r\n    }\r\n    if (currentIcon === '03n' || currentIcon === '03d'|| currentIcon === '04n'|| currentIcon === '04d'|| currentIcon === '50n'|| currentIcon === '50d'){\r\n        icon = cloud;\r\n        alt = 'image of a cloud';\r\n    }\r\n    if (currentIcon === '09d' || currentIcon === '09n'){\r\n        icon = rain;\r\n        alt = 'image of rain';\r\n    }\r\n    if (currentIcon === '10d'){\r\n        icon = rainDay;\r\n        alt = 'image of rainy day';\r\n    }\r\n    if (currentIcon === '10n'){\r\n        icon = rainNight;\r\n        alt = 'image of rainy night';\r\n    }\r\n    if (currentIcon === '11d' || currentIcon === '11n'){\r\n        icon = thunder;\r\n        alt = 'image of thunder';\r\n    }\r\n    if (currentIcon === '13d' || currentIcon === '13n'){\r\n        icon = snow;\r\n        alt = 'image of snow';\r\n    }\r\n\r\n    return <img src={icon} alt={alt}/>\r\n}\r\n\r\n\r\nexport default IconChanger;","import classes from \"./CurrentWeather.module.css\";\r\nimport {useSelector} from \"react-redux\";\r\nimport loading from '../assets/icons/loadingIcon/isLoading.gif'\r\nimport {useState} from \"react\";\r\nimport IconChanger from \"./IconChanger\";\r\n\r\n\r\nconst CurrentWeather = () => {\r\n    const apiData = useSelector(state => state.api);\r\n    let isLoading = false;\r\n    const [isFahrenheit, setIsFahrenheit] = useState(true);\r\n\r\n    const imperialToMetric = (imperialTemp) => {\r\n        const metricTemp = (imperialTemp - 32) * 5/9;\r\n        return  Math.round(metricTemp);\r\n    }\r\n\r\n    function getDayName()\r\n    {\r\n        const today = new Date();\r\n        const dd = String(today.getDate()).padStart(2, '0');\r\n        const mm = String(today.getMonth() + 1).padStart(2, '0');\r\n        const yyyy = today.getFullYear();\r\n        const currentFullDate = mm + '/' + dd + '/' + yyyy\r\n        const date = new Date(currentFullDate);\r\n        return date.toLocaleDateString(\"en-US\", { weekday: 'long' });\r\n    }\r\n\r\n\r\n    const onUnitChangeHandler = (event) => {\r\n        if (event.target.id === \"metric\"){\r\n            setIsFahrenheit(false);\r\n        }\r\n        if (event.target.id === \"imperial\"){\r\n            setIsFahrenheit(true)\r\n        }\r\n    }\r\n    return(\r\n        <main className={classes.wrapper}>\r\n            <section>\r\n                <div className={classes['day-wrapper']}>\r\n                    <h1>{apiData.city}</h1>\r\n                    <h2>{getDayName()}</h2>\r\n                </div>\r\n\r\n                <div className={classes.icon}>\r\n                    {!isLoading && <IconChanger/>}\r\n                    {isLoading && <img src={loading} alt=\"\"/>}\r\n                </div>\r\n            </section>\r\n\r\n            <section className={classes['weather-info']}>\r\n                <div className={classes['weather-type']}>\r\n                    {apiData.weatherStatus}\r\n                </div>\r\n\r\n                <div>\r\n                    {isFahrenheit && <div className={classes.temp}>{apiData.temperature}F&deg; </div>}\r\n                    {!isFahrenheit && <div className={classes.temp}>{imperialToMetric(apiData.temperature)}C&deg; </div>}\r\n                </div>\r\n\r\n                <div className={classes['weather-input']}>\r\n                    <button className={classes.btn} onClick={onUnitChangeHandler} id={\"imperial\"}>fahrenheit</button>\r\n                    <button className={classes.btn} onClick={onUnitChangeHandler} id={\"metric\"}>celsius</button>\r\n                </div>\r\n            </section>\r\n        </main>\r\n    )\r\n}\r\nexport default CurrentWeather;","import {createSlice} from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    city: \"\",\r\n    weatherStatus: \"\",\r\n    temperature: \"\",\r\n    weatherMain: \"\",\r\n    currentTime: null,\r\n    sunriseTime: null,\r\n    sunsetTime: null,\r\n    icon: \"\",\r\n    hasError: true\r\n}\r\n\r\nconst apiSlice = createSlice({\r\n    name:\"weather\",\r\n    initialState,\r\n    reducers: {\r\n        updateWeatherInfo(state, action) {\r\n            state.city = action.payload.city;\r\n            state.weatherStatus = action.payload.weatherStatus;\r\n            state.temperature = action.payload.temperature;\r\n            state.weatherMain = action.payload.weatherMain;\r\n            state.currentTime = action.payload.currentTime;\r\n            state.sunriseTime = action.payload.sunriseTime;\r\n            state.sunsetTime = action.payload.sunsetTime;\r\n            state.icon = action.payload.icon;\r\n            state.hasError = action.payload.hasError;\r\n        }\r\n    }\r\n})\r\n\r\n\r\nexport const apiActions = apiSlice.actions;\r\n\r\nexport default apiSlice;","import {useDispatch} from \"react-redux\";\r\nimport {apiActions} from \"../store/api-slice\";\r\nimport {useCallback} from 'react';\r\n\r\nconst useApiFetch =  () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const dataFetch = useCallback(async (url) => {\r\n        const response = await fetch(url);\r\n        if (!response.ok){\r\n            dispatch(apiActions.updateWeatherInfo({\r\n                hasError: true\r\n            }))\r\n           return\r\n        }\r\n        const data = await response.json()\r\n        dispatch(apiActions.updateWeatherInfo({\r\n            city: data.name,\r\n            temperature: Math.round(data.main.temp),\r\n            weatherStatus: data.weather[0].description,\r\n            weatherMain: data.weather[0].main,\r\n            currentTime: data.dt,\r\n            sunsetTime: data.sys.sunset,\r\n            sunriseTime: data.sys.sunrise,\r\n            icon: data.weather[0].icon,\r\n            hasError: false\r\n        }))\r\n    },[dispatch])\r\n    return {\r\n        requestData: dataFetch\r\n    }\r\n}\r\nexport default useApiFetch;","import classes from './Search.module.css';\r\nimport {useEffect, useState} from 'react';\r\nimport useApiFetch from '../hooks/useApiFetch';\r\n\r\n\r\nconst Search = () => {\r\n    const KEY = process.env.REACT_APP_API_KEY;\r\n    const [city, setCity] = useState('');\r\n    const {requestData} = useApiFetch(`https://api.openweathermap.org/data/2.5/weather?${\"q=\" + city}&appid=${KEY}`);\r\n    const {requestData: onLoadFetch} = useApiFetch();\r\n\r\n    useEffect(() =>{\r\n        const geoLoactionHandler = async () => {\r\n            if (window.navigator.geolocation){\r\n                await navigator.geolocation.getCurrentPosition(position => {\r\n                    onLoadFetch(`https://api.openweathermap.org/data/2.5/weather?${\"&lat=\" + position.coords.latitude  + \"&lon=\" + position.coords.longitude}&appid=${KEY}&units=imperial`)\r\n                }, fallback => {\r\n                    onLoadFetch(`https://api.openweathermap.org/data/2.5/weather?q=miami&appid=${KEY}&units=imperial`)\r\n                        console.log(fallback)\r\n                    }\r\n                );\r\n            }\r\n        }\r\n        geoLoactionHandler();\r\n    },[onLoadFetch, KEY])\r\n\r\n    const cityInputHandler = (event) => {\r\n        setCity(event.target.value)\r\n    }\r\n\r\n    const searchDataByCityHandler = (event) => {\r\n        event.preventDefault();\r\n        if (city === ''){\r\n            return\r\n        }\r\n       requestData(`https://api.openweathermap.org/data/2.5/weather?${\"q=\" + city}&appid=${KEY}&units=imperial`)\r\n        setCity('')\r\n    }\r\n\r\n    return(\r\n        <nav className={`${classes.wrapper} nav`}>\r\n            <form onSubmit={searchDataByCityHandler}>\r\n                <input placeholder={'Search City'} onChange={cityInputHandler} value={city}/>\r\n                <button className={classes.btn} type={\"submit\"}>Submit</button>\r\n            </form>\r\n        </nav>\r\n    )\r\n}\r\nexport default Search;","import CurrentWeather from \"./componets/CurrentWeather\";\r\nimport Search from \"./componets/Search\";\r\nimport {useSelector} from \"react-redux\";\r\n\r\nfunction App() {\r\n    const apiData = useSelector(state => state.api);\r\n\r\n  return (\r\n    <main>\r\n          <Search/>\r\n        {apiData.hasError?<h1>CITY OR STATE WAS FOUND<br/>TRY AGAIN</h1>:<CurrentWeather/>}\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import {configureStore} from \"@reduxjs/toolkit\";\r\nimport apiSlice from \"./api-slice\";\r\n\r\nconst store= configureStore({\r\n    reducer: {\r\n        api: apiSlice.reducer\r\n    }\r\n});\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {Provider} from \"react-redux\";\r\nimport store from \"./store\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <Provider store={store}><App /></Provider>\r\n\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}